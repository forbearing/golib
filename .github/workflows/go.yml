# This workflow builds and validates a Go project
# It checks formatting, builds the project, and verifies that the generated demo project compiles

name: Go

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - uses: actions/checkout@v4

      # Set up Go environment
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.24"

      # Install gofumpt for formatting checks
      - name: Install gofumpt
        run: go install mvdan.cc/gofumpt@latest

      # Check if code is properly formatted
      - name: Check formatting
        run: |
          files=$(gofumpt -l .)
          if [ -n "$files" ]; then
            echo "‚ùå gofumpt found unformatted files:"
            echo "$files"
            echo ""
            echo "üëâ Please run 'gofumpt -w .' locally and commit again."
            exit 1
          else
            echo "‚úÖ gofumpt formatting check passed"
          fi

      # Build the current project
      - name: Build
        run: go build -v ./...

      # Install gg CLI, generate a demo project, and ensure it compiles
      - name: Generate demo project with gg and build it
        run: |
          # Install gg CLI
          go install ./cmd/gg

          # Generate demo project
          gg new demo

          # Ensure the generated demo project compiles
          go build -C demo ./...
