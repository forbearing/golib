# golangci-lint configuration for v2.5.0+
# See: https://golangci-lint.run/docs/configuration/

version: "2"

run:
  timeout: 10m
  modules-download-mode: readonly
  concurrency: 4

severity:
  default: error

linters:
  # v2 config does not support `disable-all`; use `default: none` instead
  default: none
  enable:
    # Essential linters for code quality
    - errcheck
    - govet
    - ineffassign
    - staticcheck
    - unused

    # Security and bug detection
    - gosec
    - bodyclose
    - rowserrcheck
    - sqlclosecheck

    # Code style (less strict)
    - misspell
    - unconvert

    # Performance
    - prealloc

    # Maintainability (relaxed)
    - cyclop
    - funlen
    - gocognit
    - gocyclo
    - nestif

    # Import management
    - depguard

    # Additional useful linters (less noisy)
    - asciicheck
    - durationcheck
    - errname
    - errorlint
    - nilerr
    - noctx
    - predeclared
    - wastedassign

  # Linter-specific settings (moved under linters.settings for v2)
  settings:
    cyclop:
      max-complexity: 20

    depguard:
      rules:
        main:
          deny:
            - pkg: "github.com/pkg/errors"
              desc: "Use github.com/cockroachdb/errors instead"

    errcheck:
      check-type-assertions: true
      exclude-functions:
        - io/ioutil.ReadFile
        - io.Copy(*bytes.Buffer)
        - io.Copy(os.Stdout)

    funlen:
      lines: 150
      statements: 80

    gocognit:
      min-complexity: 20

    gocyclo:
      min-complexity: 20

    lll:
      line-length: 120

    misspell:
      locale: US

    nestif:
      min-complexity: 6

    prealloc:
      simple: true
      range-loops: true
      for-loops: false

    staticcheck:
      checks: ["all"]

  # Exclusions moved under linters.exclusions for v2
  exclusions:
    generated: lax
    presets:
      - comments
      - std-error-handling
      - common-false-positives
      - legacy
    rules:
      # Exclude lll issues for long lines with go:generate
      - linters:
          - lll
        source: "^//go:generate "
      # Relax complexity in tests
      - path: _test\.go
        linters:
          - gosec
          - funlen
          - gocognit
          - gocyclo
      # Allow longer functions in cmd packages (often setup code)
      - path: cmd/
        linters:
          - funlen
          - gocognit
          - gocyclo

issues:
  # Increase max issues to avoid truncation
  max-same-issues: 100
